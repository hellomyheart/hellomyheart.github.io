(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{538:function(t,a,v){"use strict";v.r(a);var s=v(15),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("什么是集合（Collection）？集合就是“由若干个确定的元素所构成的整体”。例如，5只小兔构成的集合：")]),t._v(" "),v("div",{staticClass:"language-ascii line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('┌ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┐\n\n│   (\\_(\\     (\\_/)     (\\_/)     (\\_/)      (\\(\\   │\n    ( -.-)    (•.•)     (>.<)     (^.^)     (=\'.\')\n│  C(")_(")  (")_(")   (")_(")   (")_(")   O(_")")  │\n\n└ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┘\n')])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br")])]),v("p",[t._v("在数学中，我们经常遇到集合的概念。例如：")]),t._v(" "),v("ul",[v("li",[t._v("有限集合：\n"),v("ul",[v("li",[t._v("一个班所有的同学构成的集合；")]),t._v(" "),v("li",[t._v("一个网站所有的商品构成的集合；")]),t._v(" "),v("li",[t._v("...")])])]),t._v(" "),v("li",[t._v("无限集合：\n"),v("ul",[v("li",[t._v("全体自然数集合：1，2，3，……")]),t._v(" "),v("li",[t._v("有理数集合；")]),t._v(" "),v("li",[t._v("实数集合；")]),t._v(" "),v("li",[t._v("...")])])])]),t._v(" "),v("p",[t._v("为什么要在计算机中引入集合呢？这是为了便于处理一组类似的数据，例如：")]),t._v(" "),v("ul",[v("li",[t._v("计算所有同学的总成绩和平均成绩；")]),t._v(" "),v("li",[t._v("列举所有的商品名称和价格；")]),t._v(" "),v("li",[t._v("……")])]),t._v(" "),v("p",[t._v("在Java中，如果一个Java对象可以在内部持有若干其他Java对象，并对外提供访问接口，我们把这种Java对象称为集合。很显然，Java的数组可以看作是一种集合：")]),t._v(" "),v("div",{staticClass:"language-java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ss "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以持有10个String对象")]),t._v("\nss"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以放入String对象")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" first "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ss"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以获取String对象")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br")])]),v("p",[t._v("既然Java提供了数组这种数据类型，可以充当集合，那么，我们为什么还需要其他集合类？这是因为数组有如下限制：")]),t._v(" "),v("ul",[v("li",[t._v("数组初始化后大小不可变；")]),t._v(" "),v("li",[t._v("数组只能按索引顺序存取。")])]),t._v(" "),v("p",[t._v("因此，我们需要各种不同类型的集合类来处理不同的数据，例如：")]),t._v(" "),v("ul",[v("li",[t._v("可变大小的顺序链表；")]),t._v(" "),v("li",[t._v("保证无重复元素的集合；")]),t._v(" "),v("li",[t._v("...")])]),t._v(" "),v("h3",{attrs:{id:"collection"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#collection"}},[t._v("#")]),t._v(" Collection")]),t._v(" "),v("p",[t._v("Java标准库自带的"),v("code",[t._v("java.util")]),t._v("包提供了集合类："),v("code",[t._v("Collection")]),t._v("，它是除"),v("code",[t._v("Map")]),t._v("外所有其他集合类的根接口。Java的"),v("code",[t._v("java.util")]),t._v("包主要提供了以下三种类型的集合：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("List")]),t._v("：一种有序列表的集合，例如，按索引排列的"),v("code",[t._v("Student")]),t._v("的"),v("code",[t._v("List")]),t._v("；")]),t._v(" "),v("li",[v("code",[t._v("Set")]),t._v("：一种保证没有重复元素的集合，例如，所有无重复名称的"),v("code",[t._v("Student")]),t._v("的"),v("code",[t._v("Set")]),t._v("；")]),t._v(" "),v("li",[v("code",[t._v("Map")]),t._v("：一种通过键值（key-value）查找的映射表集合，例如，根据"),v("code",[t._v("Student")]),t._v("的"),v("code",[t._v("name")]),t._v("查找对应"),v("code",[t._v("Student")]),t._v("的"),v("code",[t._v("Map")]),t._v("。")])]),t._v(" "),v("blockquote",[v("p",[t._v("List：有序列表集合")]),t._v(" "),v("p",[t._v("set:无重复元素集合")]),t._v(" "),v("p",[t._v("Map：键值对集合")])]),t._v(" "),v("p",[t._v("Java集合的设计有几个特点：一是实现了接口和实现类相分离，例如，有序表的接口是"),v("code",[t._v("List")]),t._v("，具体的实现类有"),v("code",[t._v("ArrayList")]),t._v("，"),v("code",[t._v("LinkedList")]),t._v("等，二是支持泛型，我们可以限制在一个集合中只能放入同一种数据类型的元素，例如：")]),t._v(" "),v("div",{staticClass:"language-java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),v("span",{pre:!0,attrs:{class:"token generics"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),v("span",{pre:!0,attrs:{class:"token generics"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只能放入String类型")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("最后，Java访问集合总是通过统一的方式——迭代器（Iterator）来实现，它最明显的好处在于无需知道集合内部元素是按什么方式存储的。")]),t._v(" "),v("p",[t._v("由于Java的集合设计非常久远，中间经历过大规模改进，我们要注意到有一小部分集合类是遗留类，不应该继续使用：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("Hashtable")]),t._v("：一种线程安全的"),v("code",[t._v("Map")]),t._v("实现；")]),t._v(" "),v("li",[v("code",[t._v("Vector")]),t._v("：一种线程安全的"),v("code",[t._v("List")]),t._v("实现；")]),t._v(" "),v("li",[v("code",[t._v("Stack")]),t._v("：基于"),v("code",[t._v("Vector")]),t._v("实现的"),v("code",[t._v("LIFO")]),t._v("的栈。")])]),t._v(" "),v("blockquote",[v("p",[t._v("Vector和Stack已经变成了遗留类。")])]),t._v(" "),v("p",[t._v("还有一小部分接口是遗留接口，也不应该继续使用：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("Enumeration<E>")]),t._v("：已被"),v("code",[t._v("Iterator<E>")]),t._v("取代。")])]),t._v(" "),v("h3",{attrs:{id:"小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),v("p",[t._v("Java的集合类定义在"),v("code",[t._v("java.util")]),t._v("包中，支持泛型，主要提供了3种集合类，包括"),v("code",[t._v("List")]),t._v("，"),v("code",[t._v("Set")]),t._v("和"),v("code",[t._v("Map")]),t._v("。Java集合使用统一的"),v("code",[t._v("Iterator")]),t._v("遍历，尽量不要使用遗留接口。")]),t._v(" "),v("h3",{attrs:{id:"附-collection接口方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#附-collection接口方法"}},[t._v("#")]),t._v(" 附 collection接口方法")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("返回值 方法名（参数列表）")]),t._v(" "),v("th",[t._v("解释")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("boolean add(E e)")]),t._v(" "),v("td",[t._v("确保此集合包含指定的元素（可选操作）。")])]),t._v(" "),v("tr",[v("td",[t._v("boolean addAll(Collection<? extends E> c)")]),t._v(" "),v("td",[t._v("将指定集合中的所有元素添加到此集合（可选操作）。")])]),t._v(" "),v("tr",[v("td",[t._v("void clear()")]),t._v(" "),v("td",[t._v("从此集合中删除所有元素（可选操作）。")])]),t._v(" "),v("tr",[v("td",[t._v("boolean contains(Object o)")]),t._v(" "),v("td",[t._v("如果此集合包含指定的元素，则返回 true 。")])]),t._v(" "),v("tr",[v("td",[t._v("boolean containsAll(Collection<?> c)")]),t._v(" "),v("td",[t._v("如果此集合包含指定 集合中的所有元素，则返回true。")])]),t._v(" "),v("tr",[v("td",[t._v("boolean equals(Object o)")]),t._v(" "),v("td",[t._v("将指定的对象与此集合进行比较以获得相等性。")])]),t._v(" "),v("tr",[v("td",[t._v("int hashCode()")]),t._v(" "),v("td",[t._v("返回此集合的哈希码值。")])]),t._v(" "),v("tr",[v("td",[t._v("boolean isEmpty()")]),t._v(" "),v("td",[t._v("如果此集合不包含元素，则返回 true 。")])]),t._v(" "),v("tr",[v("td",[t._v("Iterator"),v("E",[t._v(" iterator()")])],1),t._v(" "),v("td",[t._v("返回此集合中的元素的迭代器。")])]),t._v(" "),v("tr",[v("td",[t._v("default Stream"),v("E",[t._v(" parallelStream()")])],1),t._v(" "),v("td",[t._v("返回可能并行的 Stream与此集合作为其来源。")])]),t._v(" "),v("tr",[v("td",[t._v("boolean remove(Object o)")]),t._v(" "),v("td",[t._v("从该集合中删除指定元素的单个实例（如果存在）（可选操作）。")])]),t._v(" "),v("tr",[v("td",[t._v("boolean removeAll(Collection<?> c)")]),t._v(" "),v("td",[t._v("删除指定集合中包含的所有此集合的元素（可选操作）。")])]),t._v(" "),v("tr",[v("td",[t._v("default boolean removeIf(Predicate<? super E> filter)")]),t._v(" "),v("td",[t._v("删除满足给定谓词的此集合的所有元素。")])]),t._v(" "),v("tr",[v("td",[t._v("boolean retainAll(Collection<?> c)")]),t._v(" "),v("td",[t._v("仅保留此集合中包含在指定集合中的元素（可选操作）。")])]),t._v(" "),v("tr",[v("td",[t._v("int size()")]),t._v(" "),v("td",[t._v("返回此集合中的元素数。")])]),t._v(" "),v("tr",[v("td",[t._v("default Spliterator"),v("E",[t._v(" spliterator()")])],1),t._v(" "),v("td",[t._v("创建一个Spliterator在这个集合中的元素。")])]),t._v(" "),v("tr",[v("td",[t._v("default Stream"),v("E",[t._v(" stream()")])],1),t._v(" "),v("td",[t._v("返回以此集合作为源的顺序 Stream 。")])]),t._v(" "),v("tr",[v("td",[t._v("Object[] toArray()")]),t._v(" "),v("td",[t._v("返回一个包含此集合中所有元素的数组。")])]),t._v(" "),v("tr",[v("td",[v("T",[t._v(" T[] toArray(T[] a)")])],1),t._v(" "),v("td",[t._v("返回包含此集合中所有元素的数组; 返回的数组的运行时类型是指定数组的运行时类型。")])])])])])}),[],!1,null,null,null);a.default=_.exports}}]);