(window.webpackJsonp=window.webpackJsonp||[]).push([[533],{951:function(t,s,n){"use strict";n.r(s);var a=n(14),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"概览"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[t._v("#")]),t._v(" 概览")]),t._v(" "),n("p",[t._v("这三个操作系统都为应用程序向用户发送通知提供了手段。 在主进程和渲染进程中，显示通知的技术不同的。")]),t._v(" "),n("p",[t._v("对于渲染进程，Electron 方便地允许开发者使用 "),n("a",{attrs:{href:"https://notifications.spec.whatwg.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML5 通知 API"),n("OutboundLink")],1),t._v(" 发送通知，然后使用当前运行中的系统的原生通知 API 来进行显示。")]),t._v(" "),n("p",[t._v("要在主进程中显示通知，您需要使用 "),n("a",{attrs:{href:"https://www.electronjs.org/docs/api/notification",target:"_blank",rel:"noopener noreferrer"}},[t._v("Notification"),n("OutboundLink")],1),t._v(" 模块。")]),t._v(" "),n("h2",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),n("h3",{attrs:{id:"在渲染进程中显示通知"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在渲染进程中显示通知"}},[t._v("#")]),t._v(" "),n("a",{attrs:{href:"https://www.electronjs.org/docs/tutorial/notifications#%E5%9C%A8%E6%B8%B2%E6%9F%93%E8%BF%9B%E7%A8%8B%E4%B8%AD%E6%98%BE%E7%A4%BA%E9%80%9A%E7%9F%A5",target:"_blank",rel:"noopener noreferrer"}},[t._v("在渲染进程中显示通知"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("假定你有一个 "),n("a",{attrs:{href:"https://www.electronjs.org/docs/tutorial/quick-start",target:"_blank",rel:"noopener noreferrer"}},[t._v("Quick Start Guide"),n("OutboundLink")],1),t._v(" 中的 Electron 应用程序， 添加以下内容到 "),n("code",[t._v("index.html")]),t._v(" 文件在闭合 "),n("code",[t._v("</body>")]),t._v(" 标签前：")]),t._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("renderer.js"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script"}}),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("并添加 "),n("code",[t._v("renderer.js")]),t._v(" 文件：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myNotification "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Notification")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Title'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  body"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Notification from the Renderer process'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmyNotification"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Notification clicked'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("启动 Electron 应用程序后，您应该能看到通知：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://zeroone-bucket.oss-cn-beijing.aliyuncs.com/blog/20210417181003.png",alt:"渲染进程中的通知"}})]),t._v(" "),n("p",[t._v("如果你打开控制台，然后单击通知。你将看到触发 "),n("code",[t._v("onclick")]),t._v(" 事件后生成的消息：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://zeroone-bucket.oss-cn-beijing.aliyuncs.com/blog/20210417181008.png",alt:"在通知上点击消息"}})]),t._v(" "),n("blockquote",[n("p",[t._v("在我的linux系统下，单击通知没有出发onclick事件（系统原因）。")])]),t._v(" "),n("h3",{attrs:{id:"在主进程中显示通知"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在主进程中显示通知"}},[t._v("#")]),t._v(" 在主进程中显示通知")]),t._v(" "),n("p",[t._v("从 "),n("a",{attrs:{href:"https://www.electronjs.org/docs/tutorial/quick-start",target:"_blank",rel:"noopener noreferrer"}},[t._v("Quick Start Guide"),n("OutboundLink")],1),t._v(" 中的应用开始，将以下内容更新到 "),n("code",[t._v("main.js")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Notification "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'electron'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("showNotification")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" notification "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    title"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Basic Notification'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    body"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Notification from the Main process'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Notification")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("notification"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("whenReady")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("createWindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("showNotification"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("blockquote",[n("p",[t._v("官方中文版本的代码少了一个{，英文原版代码是没问题的，怀疑是翻译时出现了问题。")])]),t._v(" "),n("p",[t._v("启动 Electron 应用程序后，您应该能看到通知：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://zeroone-bucket.oss-cn-beijing.aliyuncs.com/blog/20210417181030.png",alt:"主进程中的通知"}})]),t._v(" "),n("h2",{attrs:{id:"补充资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#补充资料"}},[t._v("#")]),t._v(" 补充资料")]),t._v(" "),n("p",[t._v("虽然操作系统的代码和用户体验相似，但依然存在微妙的差异。")]),t._v(" "),n("h3",{attrs:{id:"windows"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[t._v("#")]),t._v(" Windows")]),t._v(" "),n("ul",[n("li",[t._v("On Windows 10, a shortcut to your app with an "),n("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Application User Model ID"),n("OutboundLink")],1),t._v(" must be installed to the Start Menu. 这可能会在开发过程中被过度杀死，因此将 "),n("code",[t._v("node_modules\\electron\\dist\\electron.exe")]),t._v(" 添加到您的开始菜单中也做到了 的技巧。 在Explorer, 右键单击和“Pin 开始菜单”中导航到文件。 然后您需要添加 "),n("code",[t._v("app.setAppUserModelId(process.execPath)")]),t._v(" 到主进程才能看到通知。")]),t._v(" "),n("li",[t._v("在 Windows 8.1 和 Windows 8 上，带有 "),n("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("应用程序用户模型ID（Application User Model ID）"),n("OutboundLink")],1),t._v(" 的应用程序快捷方式必须被添加到开始屏幕上。 但是请注意，它不需要被固定到开始屏幕。")]),t._v(" "),n("li",[t._v("在 Windows 7 上, 通知通过视觉上类似于较新系统原生的一个自定义的实现来工作。")])]),t._v(" "),n("p",[t._v("Electron尝试将应用程序用户模型 ID 的相关工作自动化。 Electron在和安装和更新框架 Squirrel 协同使用的时候，"),n("a",{attrs:{href:"https://github.com/electron/windows-installer/blob/master/README.md#handling-squirrel-events",target:"_blank",rel:"noopener noreferrer"}},[t._v("快捷方式将被自动正确的配置好"),n("OutboundLink")],1),t._v("。 更棒的是，Electron 会自动检测 Squirrel 的存在，并且使用正确的值来自动调用"),n("code",[t._v("app.setAppUserModelId()")]),t._v("。 在开发的过程中, 你可能需要自己调用"),n("a",{attrs:{href:"https://www.electronjs.org/docs/api/app.md#appsetappusermodelidid-windows",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("app.setAppUserModelld()")]),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("此外，在Windows 8中，通知正文的最大长度为250个字符，Windows团队建议将通知保留为200个字符。 然而，Windows 10中已经删除了这个限制，但是Windows团队要求开发人员合理使用。 尝试将大量文本发送到API(数千个字符) 可能会导致不稳定。")]),t._v(" "),n("h4",{attrs:{id:"高级通知"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#高级通知"}},[t._v("#")]),t._v(" 高级通知")]),t._v(" "),n("p",[t._v("Windows 的更高版本允许高级通知，自定义模板，图像和其他灵活元素。 要发送这些通知(来自主进程或渲染器进程)，请使用用户区模块 "),n("a",{attrs:{href:"https://github.com/felixrieseberg/electron-windows-notifications",target:"_blank",rel:"noopener noreferrer"}},[t._v("electron-windows-notifications"),n("OutboundLink")],1),t._v(" 来用原生节点附件发送 "),n("code",[t._v("ToastNotification")]),t._v(" 和 "),n("code",[t._v("TileNotification")]),t._v(" 对象。")]),t._v(" "),n("p",[t._v("当包括按钮在内的通知使用 "),n("code",[t._v("electron-windows-notifications")]),t._v(" 时，处理回复需要使用 "),n("a",{attrs:{href:"https://github.com/felixrieseberg/electron-windows-interactive-notifications",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("electron-windows-interactive-notifications")]),n("OutboundLink")],1),t._v(" 帮助注册所需的 COM 组件并调用您的 Electron 应用程序和输入的用户数据。")]),t._v(" "),n("h4",{attrs:{id:"免打扰模式-演示模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#免打扰模式-演示模式"}},[t._v("#")]),t._v(" 免打扰模式 / 演示模式")]),t._v(" "),n("p",[t._v("如果要检测是否允许发送通知，请使用 "),n("a",{attrs:{href:"https://github.com/felixrieseberg/electron-notification-state",target:"_blank",rel:"noopener noreferrer"}},[t._v("electron-notification-state"),n("OutboundLink")],1),t._v(" 模块。")]),t._v(" "),n("p",[t._v("这样，您可以提前确定 Windows 是否会将通知忽略。")]),t._v(" "),n("h3",{attrs:{id:"macos"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#macos"}},[t._v("#")]),t._v(" macOS")]),t._v(" "),n("p",[t._v("MacOS上的通知是最直接的，但你应该注意"),n("a",{attrs:{href:"https://developer.apple.com/macos/human-interface-guidelines/system-capabilities/notifications/",target:"_blank",rel:"noopener noreferrer"}},[t._v("苹果关于通知的人机接口指南（Apple's Human Interface guidelines regarding notifications）"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("请注意，通知的大小限制为256个字节，如果超过该限制，则会被截断。")]),t._v(" "),n("h4",{attrs:{id:"高级通知-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#高级通知-2"}},[t._v("#")]),t._v(" 高级通知")]),t._v(" "),n("p",[t._v("后来的 macOS 版本允许有一个输入字段的通知，允许用户快速回复通知。 为了通过输入字段发送通知，请使用用户区模块"),n("a",{attrs:{href:"https://github.com/CharlieHess/node-mac-notifier",target:"_blank",rel:"noopener noreferrer"}},[t._v("node-mac-notifier"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("h4",{attrs:{id:"勿扰-会话状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#勿扰-会话状态"}},[t._v("#")]),t._v(" 勿扰 / 会话状态")]),t._v(" "),n("p",[t._v("要检测是否允许发送通知，请使用用户区模块 "),n("a",{attrs:{href:"https://github.com/felixrieseberg/electron-notification-state",target:"_blank",rel:"noopener noreferrer"}},[t._v("electron-notification-state"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("p",[t._v("这样可以提前检测是否显示通知。")]),t._v(" "),n("h3",{attrs:{id:"linux"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[t._v("#")]),t._v(" Linux")]),t._v(" "),n("p",[t._v("通知是通过"),n("code",[t._v("libnotify")]),t._v("发送的，libnotify可以在任何实现了"),n("a",{attrs:{href:"https://developer.gnome.org/notification-spec/",target:"_blank",rel:"noopener noreferrer"}},[t._v("桌面通知规范（Desktop Notifications Specification）"),n("OutboundLink")],1),t._v("的桌面环境中发送通知，包括Cinnamon、Enlightenment、Unity、GNOME、KDE")]),t._v(" "),n("blockquote",[n("p",[t._v("在我的deepin上，通知是可以正常运行的，但是通知点击事件不起作用。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);