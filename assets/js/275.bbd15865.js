(window.webpackJsonp=window.webpackJsonp||[]).push([[275],{693:function(s,a,t){"use strict";t.r(a);var n=t(14),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("我们知道Map是一种键-值（key-value）映射表，可以通过key快速查找对应的value。")]),s._v(" "),t("p",[s._v("以HashMap为例，观察下面的代码：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" map "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Xiao Ming"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Xiao Hong"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Xiao Jun"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// Person("Xiao Ming")')]),s._v("\nmap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// null")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("code",[s._v("HashMap")]),s._v("之所以能根据"),t("code",[s._v("key")]),s._v("直接拿到"),t("code",[s._v("value")]),s._v("，原因是它内部通过空间换时间的方法，用一个大数组存储所有"),t("code",[s._v("value")]),s._v("，并根据key直接计算出"),t("code",[s._v("value")]),s._v("应该存储在哪个索引：")]),s._v(" "),t("div",{staticClass:"language-ascii line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('  ┌───┐\n0 │   │\n  ├───┤\n1 │ ●─┼───> Person("Xiao Ming")\n  ├───┤\n2 │   │\n  ├───┤\n3 │   │\n  ├───┤\n4 │   │\n  ├───┤\n5 │ ●─┼───> Person("Xiao Hong")\n  ├───┤\n6 │ ●─┼───> Person("Xiao Jun")\n  ├───┤\n7 │   │\n  └───┘\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("如果"),t("code",[s._v("key")]),s._v("的值为"),t("code",[s._v('"a"')]),s._v("，计算得到的索引总是"),t("code",[s._v("1")]),s._v("，因此返回"),t("code",[s._v("value")]),s._v("为"),t("code",[s._v('Person("Xiao Ming")')]),s._v("，如果"),t("code",[s._v("key")]),s._v("的值为"),t("code",[s._v('"b"')]),s._v("，计算得到的索引总是"),t("code",[s._v("5")]),s._v("，因此返回"),t("code",[s._v("value")]),s._v("为"),t("code",[s._v('Person("Xiao Hong")')]),s._v("，这样，就不必遍历整个数组，即可直接读取"),t("code",[s._v("key")]),s._v("对应的"),t("code",[s._v("value")]),s._v("。")]),s._v(" "),t("p",[s._v("当我们使用"),t("code",[s._v("key")]),s._v("存取"),t("code",[s._v("value")]),s._v("的时候，就会引出一个问题：")]),s._v(" "),t("p",[s._v("我们放入"),t("code",[s._v("Map")]),s._v("的"),t("code",[s._v("key")]),s._v("是字符串"),t("code",[s._v('"a"')]),s._v("，但是，当我们获取"),t("code",[s._v("Map")]),s._v("的"),t("code",[s._v("value")]),s._v("时，传入的变量不一定就是放入的那个"),t("code",[s._v("key")]),s._v("对象。")]),s._v(" "),t("p",[s._v("换句话讲，两个"),t("code",[s._v("key")]),s._v("应该是内容相同，但不一定是同一个对象。测试代码如下：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Main")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" key1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" map "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" key2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" key2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("equals")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("blockquote",[t("p",[s._v("运行结果如下：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("p",[s._v("因为在"),t("code",[s._v("Map")]),s._v("的内部，对"),t("code",[s._v("key")]),s._v("做比较是通过"),t("code",[s._v("equals()")]),s._v("实现的，这一点和"),t("code",[s._v("List")]),s._v("查找元素需要正确覆写"),t("code",[s._v("equals()")]),s._v("是一样的，即正确使用"),t("code",[s._v("Map")]),s._v("必须保证：作为"),t("code",[s._v("key")]),s._v("的对象必须正确覆写"),t("code",[s._v("equals()")]),s._v("方法。")]),s._v(" "),t("p",[s._v("我们经常使用"),t("code",[s._v("String")]),s._v("作为"),t("code",[s._v("key")]),s._v("，因为"),t("code",[s._v("String")]),s._v("已经正确覆写了"),t("code",[s._v("equals()")]),s._v("方法。但如果我们放入的"),t("code",[s._v("key")]),s._v("是一个自己写的类，就必须保证正确覆写了"),t("code",[s._v("equals()")]),s._v("方法。")]),s._v(" "),t("blockquote",[t("p",[s._v("Map内部会调用equals方法进行key的比较。")])]),s._v(" "),t("p",[s._v("我们再思考一下"),t("code",[s._v("HashMap")]),s._v("为什么能通过"),t("code",[s._v("key")]),s._v("直接计算出"),t("code",[s._v("value")]),s._v("存储的索引。相同的"),t("code",[s._v("key")]),s._v("对象（使用"),t("code",[s._v("equals()")]),s._v("判断时返回"),t("code",[s._v("true")]),s._v("）必须要计算出相同的索引，否则，相同的"),t("code",[s._v("key")]),s._v("每次取出的"),t("code",[s._v("value")]),s._v("就不一定对。")]),s._v(" "),t("p",[s._v("通过"),t("code",[s._v("key")]),s._v("计算索引的方式就是调用"),t("code",[s._v("key")]),s._v("对象的"),t("code",[s._v("hashCode()")]),s._v("方法，它返回一个"),t("code",[s._v("int")]),s._v("整数。"),t("code",[s._v("HashMap")]),s._v("正是通过这个方法直接定位"),t("code",[s._v("key")]),s._v("对应的"),t("code",[s._v("value")]),s._v("的索引，继而直接返回"),t("code",[s._v("value")]),s._v("。")]),s._v(" "),t("p",[s._v("因此，正确使用"),t("code",[s._v("Map")]),s._v("必须保证：")]),s._v(" "),t("ol",[t("li",[s._v("作为"),t("code",[s._v("key")]),s._v("的对象必须正确覆写"),t("code",[s._v("equals()")]),s._v("方法，相等的两个"),t("code",[s._v("key")]),s._v("实例调用"),t("code",[s._v("equals()")]),s._v("必须返回"),t("code",[s._v("true")]),s._v("；")]),s._v(" "),t("li",[s._v("作为"),t("code",[s._v("key")]),s._v("的对象还必须正确覆写"),t("code",[s._v("hashCode()")]),s._v("方法，且"),t("code",[s._v("hashCode()")]),s._v("方法要严格遵循以下规范：")])]),s._v(" "),t("ul",[t("li",[s._v("如果两个对象相等，则两个对象的"),t("code",[s._v("hashCode()")]),s._v("必须相等；")]),s._v(" "),t("li",[s._v("如果两个对象不相等，则两个对象的"),t("code",[s._v("hashCode()")]),s._v("尽量不要相等。")])]),s._v(" "),t("p",[s._v("即对应两个实例"),t("code",[s._v("a")]),s._v("和"),t("code",[s._v("b")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("如果"),t("code",[s._v("a")]),s._v("和"),t("code",[s._v("b")]),s._v("相等，那么"),t("code",[s._v("a.equals(b)")]),s._v("一定为"),t("code",[s._v("true")]),s._v("，则"),t("code",[s._v("a.hashCode()")]),s._v("必须等于"),t("code",[s._v("b.hashCode()")]),s._v("；")]),s._v(" "),t("li",[s._v("如果"),t("code",[s._v("a")]),s._v("和"),t("code",[s._v("b")]),s._v("不相等，那么"),t("code",[s._v("a.equals(b)")]),s._v("一定为"),t("code",[s._v("false")]),s._v("，则"),t("code",[s._v("a.hashCode()")]),s._v("和"),t("code",[s._v("b.hashCode()")]),s._v("尽量不要相等。")])]),s._v(" "),t("p",[s._v("上述第一条规范是正确性，必须保证实现，否则"),t("code",[s._v("HashMap")]),s._v("不能正常工作。")]),s._v(" "),t("p",[s._v("而第二条如果尽量满足，则可以保证查询效率，因为不同的对象，如果返回相同的"),t("code",[s._v("hashCode()")]),s._v("，会造成"),t("code",[s._v("Map")]),s._v("内部存储冲突，使存取的效率下降。")]),s._v(" "),t("p",[s._v("正确编写"),t("code",[s._v("equals()")]),s._v("的方法我们已经在"),t("a",{attrs:{href:"https://www.hellomyheart.cn/pages/90f69c/",target:"_blank",rel:"noopener noreferrer"}},[s._v("编写equals方法"),t("OutboundLink")],1),s._v("一节中讲过了，以"),t("code",[s._v("Person")]),s._v("类为例：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" firstName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" lastName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("把需要比较的字段找出来：")]),s._v(" "),t("ul",[t("li",[s._v("firstName")]),s._v(" "),t("li",[s._v("lastName")]),s._v(" "),t("li",[s._v("age")])]),s._v(" "),t("p",[s._v("然后，引用类型使用"),t("code",[s._v("Objects.equals()")]),s._v("比较，基本类型使用"),t("code",[s._v("==")]),s._v("比较。")]),s._v(" "),t("p",[s._v("在正确实现"),t("code",[s._v("equals()")]),s._v("的基础上，我们还需要正确实现"),t("code",[s._v("hashCode()")]),s._v("，即上述3个字段分别相同的实例，"),t("code",[s._v("hashCode()")]),s._v("返回的"),t("code",[s._v("int")]),s._v("必须相同：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" firstName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" lastName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" firstName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" lastName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("注意到"),t("code",[s._v("String")]),s._v("类已经正确实现了"),t("code",[s._v("hashCode()")]),s._v("方法，我们在计算"),t("code",[s._v("Person")]),s._v("的"),t("code",[s._v("hashCode()")]),s._v("时，反复使用"),t("code",[s._v("31*h")]),s._v("，这样做的目的是为了尽量把不同的"),t("code",[s._v("Person")]),s._v("实例的"),t("code",[s._v("hashCode()")]),s._v("均匀分布到整个"),t("code",[s._v("int")]),s._v("范围。")]),s._v(" "),t("p",[s._v("和实现"),t("code",[s._v("equals()")]),s._v("方法遇到的问题类似，如果"),t("code",[s._v("firstName")]),s._v("或"),t("code",[s._v("lastName")]),s._v("为"),t("code",[s._v("null")]),s._v("，上述代码工作起来就会抛"),t("code",[s._v("NullPointerException")]),s._v("。为了解决这个问题，我们在计算"),t("code",[s._v("hashCode()")]),s._v("的时候，经常借助"),t("code",[s._v("Objects.hash()")]),s._v("来计算：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Objects")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hash")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("firstName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" lastName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("所以，编写"),t("code",[s._v("equals()")]),s._v("和"),t("code",[s._v("hashCode()")]),s._v("遵循的原则是：")]),s._v(" "),t("p",[t("code",[s._v("equals()")]),s._v("用到的用于比较的每一个字段，都必须在"),t("code",[s._v("hashCode()")]),s._v("中用于计算；"),t("code",[s._v("equals()")]),s._v("中没有使用到的字段，绝不可放在"),t("code",[s._v("hashCode()")]),s._v("中计算。")]),s._v(" "),t("p",[s._v("另外注意，对于放入"),t("code",[s._v("HashMap")]),s._v("的"),t("code",[s._v("value")]),s._v("对象，没有任何要求。")]),s._v(" "),t("h3",{attrs:{id:"延伸阅读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#延伸阅读"}},[s._v("#")]),s._v(" 延伸阅读")]),s._v(" "),t("p",[s._v("既然"),t("code",[s._v("HashMap")]),s._v("内部使用了数组，通过计算"),t("code",[s._v("key")]),s._v("的"),t("code",[s._v("hashCode()")]),s._v("直接定位"),t("code",[s._v("value")]),s._v("所在的索引，那么第一个问题来了：hashCode()返回的"),t("code",[s._v("int")]),s._v("范围高达±21亿，先不考虑负数，"),t("code",[s._v("HashMap")]),s._v("内部使用的数组得有多大？")]),s._v(" "),t("p",[s._v("实际上"),t("code",[s._v("HashMap")]),s._v("初始化时默认的数组大小只有16，任何"),t("code",[s._v("key")]),s._v("，无论它的"),t("code",[s._v("hashCode()")]),s._v("有多大，都可以简单地通过：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" index "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0xf = 15")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("把索引确定在0～15，即永远不会超出数组范围，上述算法只是一种最简单的实现。")]),s._v(" "),t("p",[s._v("第二个问题：如果添加超过16个"),t("code",[s._v("key-value")]),s._v("到"),t("code",[s._v("HashMap")]),s._v("，数组不够用了怎么办？")]),s._v(" "),t("p",[s._v("添加超过一定数量的"),t("code",[s._v("key-value")]),s._v("时，"),t("code",[s._v("HashMap")]),s._v("会在内部自动扩容，每次扩容一倍，即长度为16的数组扩展为长度32，相应地，需要重新确定"),t("code",[s._v("hashCode()")]),s._v("计算的索引位置。例如，对长度为32的数组计算"),t("code",[s._v("hashCode()")]),s._v("对应的索引，计算方式要改为：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" index "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x1f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0x1f = 31")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("由于扩容会导致重新分布已有的"),t("code",[s._v("key-value")]),s._v("，所以，频繁扩容对"),t("code",[s._v("HashMap")]),s._v("的性能影响很大。如果我们确定要使用一个容量为"),t("code",[s._v("10000")]),s._v("个"),t("code",[s._v("key-value")]),s._v("的"),t("code",[s._v("HashMap")]),s._v("，更好的方式是创建"),t("code",[s._v("HashMap")]),s._v("时就指定容量：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" map "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("虽然指定容量是"),t("code",[s._v("10000")]),s._v("，但"),t("code",[s._v("HashMap")]),s._v("内部的数组长度总是2n，因此，实际数组长度被初始化为比"),t("code",[s._v("10000")]),s._v("大的"),t("code",[s._v("16384")]),s._v("（214）。")]),s._v(" "),t("p",[s._v("最后一个问题：如果不同的两个"),t("code",[s._v("key")]),s._v("，例如"),t("code",[s._v('"a"')]),s._v("和"),t("code",[s._v('"b"')]),s._v("，它们的"),t("code",[s._v("hashCode()")]),s._v("恰好是相同的（这种情况是完全可能的，因为不相等的两个实例，只要求"),t("code",[s._v("hashCode()")]),s._v("尽量不相等），那么，当我们放入：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Xiao Ming"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Xiao Hong"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("时，由于计算出的数组索引相同，后面放入的"),t("code",[s._v('"Xiao Hong"')]),s._v("会不会把"),t("code",[s._v('"Xiao Ming"')]),s._v("覆盖了？")]),s._v(" "),t("p",[s._v("当然不会！使用"),t("code",[s._v("Map")]),s._v("的时候，只要"),t("code",[s._v("key")]),s._v("不相同，它们映射的"),t("code",[s._v("value")]),s._v("就互不干扰。但是，在"),t("code",[s._v("HashMap")]),s._v("内部，确实可能存在不同的"),t("code",[s._v("key")]),s._v("，映射到相同的"),t("code",[s._v("hashCode()")]),s._v("，即相同的数组索引上，肿么办？")]),s._v(" "),t("p",[s._v("我们就假设"),t("code",[s._v('"a"')]),s._v("和"),t("code",[s._v('"b"')]),s._v("这两个"),t("code",[s._v("key")]),s._v("最终计算出的索引都是5，那么，在"),t("code",[s._v("HashMap")]),s._v("的数组中，实际存储的不是一个"),t("code",[s._v("Person")]),s._v("实例，而是一个"),t("code",[s._v("List")]),s._v("，它包含两个"),t("code",[s._v("Entry")]),s._v("，一个是"),t("code",[s._v('"a"')]),s._v("的映射，一个是"),t("code",[s._v('"b"')]),s._v("的映射：")]),s._v(" "),t("div",{staticClass:"language-ascii line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("  ┌───┐\n0 │   │\n  ├───┤\n1 │   │\n  ├───┤\n2 │   │\n  ├───┤\n3 │   │\n  ├───┤\n4 │   │\n  ├───┤\n5 │ ●─┼───> List<Entry<String, Person>>\n  ├───┤\n6 │   │\n  ├───┤\n7 │   │\n  └───┘\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("在查找的时候，例如：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("HashMap内部通过"),t("code",[s._v('"a"')]),s._v("找到的实际上是"),t("code",[s._v("List<Entry<String, Person>>")]),s._v("，它还需要遍历这个"),t("code",[s._v("List")]),s._v("，并找到一个"),t("code",[s._v("Entry")]),s._v("，它的"),t("code",[s._v("key")]),s._v("字段是"),t("code",[s._v('"a"')]),s._v("，才能返回对应的"),t("code",[s._v("Person")]),s._v("实例。")]),s._v(" "),t("p",[s._v("我们把不同的"),t("code",[s._v("key")]),s._v("具有相同的"),t("code",[s._v("hashCode()")]),s._v("的情况称之为哈希冲突。在冲突的时候，一种最简单的解决办法是用"),t("code",[s._v("List")]),s._v("存储"),t("code",[s._v("hashCode()")]),s._v("相同的"),t("code",[s._v("key-value")]),s._v("。显然，如果冲突的概率越大，这个"),t("code",[s._v("List")]),s._v("就越长，"),t("code",[s._v("Map")]),s._v("的"),t("code",[s._v("get()")]),s._v("方法效率就越低，这就是为什么要尽量满足条件二：")]),s._v(" "),t("p",[s._v("如果两个对象不相等，则两个对象的hashCode()尽量不要相等。")]),s._v(" "),t("p",[t("code",[s._v("hashCode()")]),s._v("方法编写得越好，"),t("code",[s._v("HashMap")]),s._v("工作的效率就越高。")]),s._v(" "),t("h3",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),t("p",[s._v("要正确使用"),t("code",[s._v("HashMap")]),s._v("，作为"),t("code",[s._v("key")]),s._v("的类必须正确覆写"),t("code",[s._v("equals()")]),s._v("和"),t("code",[s._v("hashCode()")]),s._v("方法；")]),s._v(" "),t("p",[s._v("一个类如果覆写了"),t("code",[s._v("equals()")]),s._v("，就必须覆写"),t("code",[s._v("hashCode()")]),s._v("，并且覆写规则是：")]),s._v(" "),t("ul",[t("li",[s._v("如果"),t("code",[s._v("equals()")]),s._v("返回"),t("code",[s._v("true")]),s._v("，则"),t("code",[s._v("hashCode()")]),s._v("返回值必须相等；")]),s._v(" "),t("li",[s._v("如果"),t("code",[s._v("equals()")]),s._v("返回"),t("code",[s._v("false")]),s._v("，则"),t("code",[s._v("hashCode()")]),s._v("返回值尽量不要相等。")])]),s._v(" "),t("p",[s._v("实现"),t("code",[s._v("hashCode()")]),s._v("方法可以通过"),t("code",[s._v("Objects.hashCode()")]),s._v("辅助方法实现。")])])}),[],!1,null,null,null);a.default=e.exports}}]);