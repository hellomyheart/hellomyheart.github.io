(window.webpackJsonp=window.webpackJsonp||[]).push([[348],{767:function(t,a,s){"use strict";s.r(a);var r=s(14),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"用一个栈实现另一个栈的排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用一个栈实现另一个栈的排序"}},[t._v("#")]),t._v(" 用一个栈实现另一个栈的排序")]),t._v(" "),s("h2",{attrs:{id:"【题目】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【题目】"}},[t._v("#")]),t._v(" 【题目】")]),t._v(" "),s("p",[t._v("一个栈中元素的类型为整型，现在想将该栈从顶到底按从大到小的顺序排列，只许申请一个栈。除此之外，可以申请新的变量，但不能申请额外的数据结构如何完成排序？")]),t._v(" "),s("h2",{attrs:{id:"【难度】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【难度】"}},[t._v("#")]),t._v(" 【难度】")]),t._v(" "),s("p",[t._v("士 ☆")]),t._v(" "),s("h2",{attrs:{id:"【解答】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【解答】"}},[t._v("#")]),t._v(" 【解答】")])])}),[],!1,null,null,null);a.default=e.exports}}]);