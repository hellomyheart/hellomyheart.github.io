(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{631:function(n,p,o){"use strict";o.r(p);var t=o(14),r=Object(t.a)({},(function(){var n=this,p=n.$createElement,o=n._self._c||p;return o("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[o("p",[n._v("我们已经在前面详细介绍了Spring框架，它的主要功能包括IoC容器、AOP支持、事务支持、MVC开发以及强大的第三方集成功能等。")]),n._v(" "),o("p",[n._v("那么，Spring Boot又是什么？它和Spring是什么关系？")]),n._v(" "),o("p",[n._v("Spring Boot是一个基于Spring的套件，它帮我们预组装了Spring的一系列组件，以便以尽可能少的代码和配置来开发基于Spring的Java应用程序。")]),n._v(" "),o("p",[n._v("以汽车为例，如果我们想组装一辆汽车，我们需要发动机、传动、轮胎、底盘、外壳、座椅、内饰等各种部件，然后把它们装配起来。Spring就相当于提供了一系列这样的部件，但是要装好汽车上路，还需要我们自己动手。而Spring Boot则相当于已经帮我们预装好了一辆可以上路的汽车，如果有特殊的要求，例如把发动机从普通款换成涡轮增压款，可以通过修改配置或编写少量代码完成。")]),n._v(" "),o("p",[n._v("因此，Spring Boot和Spring的关系就是整车和零部件的关系，它们不是取代关系，试图跳过Spring直接学习Spring Boot是不可能的。")]),n._v(" "),o("p",[n._v("Spring Boot的目标就是提供一个开箱即用的应用程序架构，我们基于Spring Boot的预置结构继续开发，省时省力。")]),n._v(" "),o("p",[n._v("本章我们将详细介绍如何使用Spring Boot。")])])}),[],!1,null,null,null);p.default=r.exports}}]);