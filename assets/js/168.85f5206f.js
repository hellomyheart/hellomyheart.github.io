(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{585:function(t,s,e){"use strict";e.r(s);var a=e(14),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("一个Web App就是由一个或多个Servlet组成的，每个Servlet通过注解说明自己能处理的路径。例如：")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebServlet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlPatterns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("上述"),e("code",[t._v("HelloServlet")]),t._v("能处理"),e("code",[t._v("/hello")]),t._v("这个路径的请求。")]),t._v(" "),e("p",[t._v("早期的Servlet需要在web.xml中配置映射路径，但最新Servlet版本只需要通过注解就可以完成映射。")]),t._v(" "),e("p",[t._v("因为浏览器发送请求的时候，还会有请求方法（HTTP Method）：即GET、POST、PUT等不同类型的请求。因此，要处理GET请求，我们要覆写"),e("code",[t._v("doGet()")]),t._v("方法：")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebServlet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlPatterns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doGet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" resp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("类似的，要处理POST请求，就需要覆写"),e("code",[t._v("doPost()")]),t._v("方法。")]),t._v(" "),e("p",[t._v("如果没有覆写"),e("code",[t._v("doPost()")]),t._v("方法，那么"),e("code",[t._v("HelloServlet")]),t._v("能不能处理"),e("code",[t._v("POST /hello")]),t._v("请求呢？")]),t._v(" "),e("p",[t._v("我们查看一下"),e("code",[t._v("HttpServlet")]),t._v("的"),e("code",[t._v("doPost()")]),t._v("方法就一目了然了：它会直接返回405或400错误。因此，一个Servlet如果映射到"),e("code",[t._v("/hello")]),t._v("，那么所有请求方法都会由这个Servlet处理，至于能不能返回200成功响应，要看有没有覆写对应的请求方法。")]),t._v(" "),e("p",[t._v("一个Webapp完全可以有多个Servlet，分别映射不同的路径。例如：")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebServlet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlPatterns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebServlet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlPatterns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/signin"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SignInServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebServlet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlPatterns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[t._v("浏览器发出的HTTP请求总是由Web Server先接收，然后，根据Servlet配置的映射，不同的路径转发到不同的Servlet：")]),t._v(" "),e("div",{staticClass:"language-ascii line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("               ┌ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┐\n\n               │            /hello    ┌───────────────┐│\n                          ┌──────────>│ HelloServlet  │\n               │          │           └───────────────┘│\n┌───────┐    ┌──────────┐ │ /signin   ┌───────────────┐\n│Browser│───>│Dispatcher│─┼──────────>│ SignInServlet ││\n└───────┘    └──────────┘ │           └───────────────┘\n               │          │ /         ┌───────────────┐│\n                          └──────────>│ IndexServlet  │\n               │                      └───────────────┘│\n                              Web Server\n               └ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┘\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[t._v("这种根据路径转发的功能我们一般称为Dispatch。映射到"),e("code",[t._v("/")]),t._v("的"),e("code",[t._v("IndexServlet")]),t._v("比较特殊，它实际上会接收所有未匹配的路径，相当于"),e("code",[t._v("/*")]),t._v("，因为Dispatcher的逻辑可以用伪代码实现如下：")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" path "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatchTo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("helloServlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/signin"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatchTo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signinServlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 所有未匹配的路径均转发到"/"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatchTo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("indexServlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[t._v("所以我们在浏览器输入一个"),e("code",[t._v("http://localhost:8080/abc")]),t._v("也会看到"),e("code",[t._v("IndexServlet")]),t._v("生成的页面。")]),t._v(" "),e("h3",{attrs:{id:"httpservletrequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#httpservletrequest"}},[t._v("#")]),t._v(" HttpServletRequest")]),t._v(" "),e("p",[e("code",[t._v("HttpServletRequest")]),t._v("封装了一个HTTP请求，它实际上是从"),e("code",[t._v("ServletRequest")]),t._v("继承而来。最早设计Servlet时，设计者希望Servlet不仅能处理HTTP，也能处理类似SMTP等其他协议，因此，单独抽出了"),e("code",[t._v("ServletRequest")]),t._v("接口，但实际上除了HTTP外，并没有其他协议会用Servlet处理，所以这是一个过度设计。")]),t._v(" "),e("p",[t._v("我们通过"),e("code",[t._v("HttpServletRequest")]),t._v("提供的接口方法可以拿到HTTP请求的几乎全部信息，常用的方法有：")]),t._v(" "),e("ul",[e("li",[t._v("getMethod()：返回请求方法，例如，"),e("code",[t._v('"GET"')]),t._v("，"),e("code",[t._v('"POST"')]),t._v("；")]),t._v(" "),e("li",[t._v("getRequestURI()：返回请求路径，但不包括请求参数，例如，"),e("code",[t._v('"/hello"')]),t._v("；")]),t._v(" "),e("li",[t._v("getQueryString()：返回请求参数，例如，"),e("code",[t._v('"name=Bob&a=1&b=2"')]),t._v("；")]),t._v(" "),e("li",[t._v("getParameter(name)：返回请求参数，GET请求从URL读取参数，POST请求从Body中读取参数；")]),t._v(" "),e("li",[t._v("getContentType()：获取请求Body的类型，例如，"),e("code",[t._v('"application/x-www-form-urlencoded"')]),t._v("；")]),t._v(" "),e("li",[t._v("getContextPath()：获取当前Webapp挂载的路径，对于ROOT来说，总是返回空字符串"),e("code",[t._v('""')]),t._v("；")]),t._v(" "),e("li",[t._v("getCookies()：返回请求携带的所有Cookie；")]),t._v(" "),e("li",[t._v("getHeader(name)：获取指定的Header，对Header名称不区分大小写；")]),t._v(" "),e("li",[t._v("getHeaderNames()：返回所有Header名称；")]),t._v(" "),e("li",[t._v("getInputStream()：如果该请求带有HTTP Body，该方法将打开一个输入流用于读取Body；")]),t._v(" "),e("li",[t._v("getReader()：和getInputStream()类似，但打开的是Reader；")]),t._v(" "),e("li",[t._v("getRemoteAddr()：返回客户端的IP地址；")]),t._v(" "),e("li",[t._v("getScheme()：返回协议类型，例如，"),e("code",[t._v('"http"')]),t._v("，"),e("code",[t._v('"https"')]),t._v("；")])]),t._v(" "),e("p",[t._v("此外，"),e("code",[t._v("HttpServletRequest")]),t._v("还有两个方法："),e("code",[t._v("setAttribute()")]),t._v("和"),e("code",[t._v("getAttribute()")]),t._v("，可以给当前"),e("code",[t._v("HttpServletRequest")]),t._v("对象附加多个Key-Value，相当于把"),e("code",[t._v("HttpServletRequest")]),t._v("当作一个"),e("code",[t._v("Map<String, Object>")]),t._v("使用。")]),t._v(" "),e("p",[t._v("调用"),e("code",[t._v("HttpServletRequest")]),t._v("的方法时，注意务必阅读接口方法的文档说明，因为有的方法会返回"),e("code",[t._v("null")]),t._v("，例如"),e("code",[t._v("getQueryString()")]),t._v("的文档就写了：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("... This method returns null if the URL does not have a query string...\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"httpservletresponse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#httpservletresponse"}},[t._v("#")]),t._v(" HttpServletResponse")]),t._v(" "),e("p",[e("code",[t._v("HttpServletResponse")]),t._v("封装了一个HTTP响应。由于HTTP响应必须先发送Header，再发送Body，所以，操作"),e("code",[t._v("HttpServletResponse")]),t._v("对象时，必须先调用设置Header的方法，最后调用发送Body的方法。")]),t._v(" "),e("p",[t._v("常用的设置Header的方法有：")]),t._v(" "),e("ul",[e("li",[t._v("setStatus(sc)：设置响应代码，默认是"),e("code",[t._v("200")]),t._v("；")]),t._v(" "),e("li",[t._v("setContentType(type)：设置Body的类型，例如，"),e("code",[t._v('"text/html"')]),t._v("；")]),t._v(" "),e("li",[t._v("setCharacterEncoding(charset)：设置字符编码，例如，"),e("code",[t._v('"UTF-8"')]),t._v("；")]),t._v(" "),e("li",[t._v("setHeader(name, value)：设置一个Header的值；")]),t._v(" "),e("li",[t._v("addCookie(cookie)：给响应添加一个Cookie；")]),t._v(" "),e("li",[t._v("addHeader(name, value)：给响应添加一个Header，因为HTTP协议允许有多个相同的Header；")])]),t._v(" "),e("p",[t._v("写入响应时，需要通过"),e("code",[t._v("getOutputStream()")]),t._v("获取写入流，或者通过"),e("code",[t._v("getWriter()")]),t._v("获取字符流，二者只能获取其中一个。")]),t._v(" "),e("p",[t._v("写入响应前，无需设置"),e("code",[t._v("setContentLength()")]),t._v("，因为底层服务器会根据写入的字节数自动设置，如果写入的数据量很小，实际上会先写入缓冲区，如果写入的数据量很大，服务器会自动采用Chunked编码让浏览器能识别数据结束符而不需要设置Content-Length头。")]),t._v(" "),e("p",[t._v("但是，写入完毕后调用"),e("code",[t._v("flush()")]),t._v("却是必须的，因为大部分Web服务器都基于HTTP/1.1协议，会复用TCP连接。如果没有调用"),e("code",[t._v("flush()")]),t._v("，将导致缓冲区的内容无法及时发送到客户端。此外，写入完毕后千万不要调用"),e("code",[t._v("close()")]),t._v("，原因同样是因为会复用TCP连接，如果关闭写入流，将关闭TCP连接，使得Web服务器无法复用此TCP连接。")]),t._v(" "),e("p",[t._v("写入完毕后对输出流调用flush()而不是close()方法！")]),t._v(" "),e("p",[t._v("有了"),e("code",[t._v("HttpServletRequest")]),t._v("和"),e("code",[t._v("HttpServletResponse")]),t._v("这两个高级接口，我们就不需要直接处理HTTP协议。注意到具体的实现类是由各服务器提供的，而我们编写的Web应用程序只关心接口方法，并不需要关心具体实现的子类。")]),t._v(" "),e("h3",{attrs:{id:"servlet多线程模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#servlet多线程模型"}},[t._v("#")]),t._v(" Servlet多线程模型")]),t._v(" "),e("p",[t._v("一个Servlet类在服务器中只有一个实例，但对于每个HTTP请求，Web服务器会使用多线程执行请求。因此，一个Servlet的"),e("code",[t._v("doGet()")]),t._v("、"),e("code",[t._v("doPost()")]),t._v("等处理请求的方法是多线程并发执行的。如果Servlet中定义了字段，要注意多线程并发访问的问题：")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" map "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConcurrentHashMap")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doGet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" resp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意读写map字段是多线程并发的:")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("对于每个请求，Web服务器会创建唯一的"),e("code",[t._v("HttpServletRequest")]),t._v("和"),e("code",[t._v("HttpServletResponse")]),t._v("实例，因此，"),e("code",[t._v("HttpServletRequest")]),t._v("和"),e("code",[t._v("HttpServletResponse")]),t._v("实例只有在当前处理线程中有效，它们总是局部变量，不存在多线程共享的问题。")]),t._v(" "),e("h3",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),e("p",[t._v("一个Webapp中的多个Servlet依靠路径映射来处理不同的请求；")]),t._v(" "),e("p",[t._v("映射为"),e("code",[t._v("/")]),t._v("的Servlet可处理所有“未匹配”的请求；")]),t._v(" "),e("p",[t._v("如何处理请求取决于Servlet覆写的对应方法；")]),t._v(" "),e("p",[t._v("Web服务器通过多线程处理HTTP请求，一个Servlet的处理方法可以由多线程并发执行。")])])}),[],!1,null,null,null);s.default=n.exports}}]);